type Balance {
    mint: String
    tokenAccount: String
    amount: Float
    amountUSD: Float
        @materializer(
            query: "convertToUsd { price }"
            arguments: [
                { name: "amount", field: "amount" }
                { name: "decimals", field: "decimals" }
                { name: "token", field: "mint" }
            ]
        )
    decimals: Float
}

type Balances {
    tokens: [Balance]
    nativeBalance: Float
    nativeBalanceDecimals: Float
    nativeBalanceUSD: Float
        @materializer(
            query: "convertToUsd { price }"
            arguments: [
                { name: "amount", field: "nativeBalance" }
                { name: "decimals", field: "nativeBalanceDecimals" }
            ]
        )
}

type Query {
    balances(address: String!): Balances
        @rest(
            endpoint: "https://api.helius.xyz/v0/addresses/$address/balances?api-key=$api_key"
            configuration: "helius_config"
            ecmascript: """
            function transformREST(s) {
                let out = JSON.parse(s);

                out.nativeBalanceDecimals = 9;

                return JSON.stringify(out);
            }
            """
        )
}
